/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ImplementationAuthority,
  ImplementationAuthorityInterface,
} from "../../../contracts/proxy/ImplementationAuthority";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "UpdatedImplementation",
    type: "event",
  },
  {
    inputs: [],
    name: "getImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
    ],
    name: "updateImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107f13803806107f1833981810160405281019061003291906101fb565b61004e6100436100cc60201b60201c565b6100d460201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f87c4e67a766ffddda27f441d63853a36ae64fbb07775a7c59d395e064b204eeb816040516100be9190610237565b60405180910390a150610252565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101c88261019d565b9050919050565b6101d8816101bd565b81146101e357600080fd5b50565b6000815190506101f5816101cf565b92915050565b60006020828403121561021157610210610198565b5b600061021f848285016101e6565b91505092915050565b610231816101bd565b82525050565b600060208201905061024c6000830184610228565b92915050565b610590806102616000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063025b22bc1461005c578063715018a6146100785780638da5cb5b14610082578063aaf10f42146100a0578063f2fde38b146100be575b600080fd5b610076600480360381019061007191906103f4565b6100da565b005b61008061015d565b005b61008a610171565b6040516100979190610430565b60405180910390f35b6100a861019a565b6040516100b59190610430565b60405180910390f35b6100d860048036038101906100d391906103f4565b6101c4565b005b6100e2610247565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f87c4e67a766ffddda27f441d63853a36ae64fbb07775a7c59d395e064b204eeb816040516101529190610430565b60405180910390a150565b610165610247565b61016f60006102c5565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101cc610247565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361023b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610232906104ce565b60405180910390fd5b610244816102c5565b50565b61024f610389565b73ffffffffffffffffffffffffffffffffffffffff1661026d610171565b73ffffffffffffffffffffffffffffffffffffffff16146102c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ba9061053a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103c182610396565b9050919050565b6103d1816103b6565b81146103dc57600080fd5b50565b6000813590506103ee816103c8565b92915050565b60006020828403121561040a57610409610391565b5b6000610418848285016103df565b91505092915050565b61042a816103b6565b82525050565b60006020820190506104456000830184610421565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006104b860268361044b565b91506104c38261045c565b604082019050919050565b600060208201905081810360008301526104e7816104ab565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061052460208361044b565b915061052f826104ee565b602082019050919050565b6000602082019050818103600083015261055381610517565b905091905056fea26469706673582212206efd2de86658aa77b531ac8e38779910df0e863fd1319c2a71ba94a487d9628964736f6c63430008110033";

type ImplementationAuthorityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ImplementationAuthorityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ImplementationAuthority__factory extends ContractFactory {
  constructor(...args: ImplementationAuthorityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    implementation: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ImplementationAuthority> {
    return super.deploy(
      implementation,
      overrides || {}
    ) as Promise<ImplementationAuthority>;
  }
  override getDeployTransaction(
    implementation: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(implementation, overrides || {});
  }
  override attach(address: string): ImplementationAuthority {
    return super.attach(address) as ImplementationAuthority;
  }
  override connect(signer: Signer): ImplementationAuthority__factory {
    return super.connect(signer) as ImplementationAuthority__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ImplementationAuthorityInterface {
    return new utils.Interface(_abi) as ImplementationAuthorityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ImplementationAuthority {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ImplementationAuthority;
  }
}
