/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IImplementationAuthority,
  IImplementationAuthorityInterface,
} from "../../../contracts/interface/IImplementationAuthority";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "UpdatedImplementation",
    type: "event",
  },
  {
    inputs: [],
    name: "getImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
    ],
    name: "updateImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IImplementationAuthority__factory {
  static readonly abi = _abi;
  static createInterface(): IImplementationAuthorityInterface {
    return new utils.Interface(_abi) as IImplementationAuthorityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IImplementationAuthority {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IImplementationAuthority;
  }
}
