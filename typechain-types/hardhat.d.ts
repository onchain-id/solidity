/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ClaimIssuer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClaimIssuer__factory>;
    getContractFactory(
      name: "IdFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IdFactory__factory>;
    getContractFactory(
      name: "IIdFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIdFactory__factory>;
    getContractFactory(
      name: "Identity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Identity__factory>;
    getContractFactory(
      name: "IClaimIssuer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClaimIssuer__factory>;
    getContractFactory(
      name: "IERC734",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC734__factory>;
    getContractFactory(
      name: "IERC735",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC735__factory>;
    getContractFactory(
      name: "IIdentity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIdentity__factory>;
    getContractFactory(
      name: "IImplementationAuthority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IImplementationAuthority__factory>;
    getContractFactory(
      name: "Migrations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Migrations__factory>;
    getContractFactory(
      name: "IdentityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IdentityProxy__factory>;
    getContractFactory(
      name: "ImplementationAuthority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ImplementationAuthority__factory>;
    getContractFactory(
      name: "Version",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Version__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ClaimIssuer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClaimIssuer>;
    getContractAt(
      name: "IdFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IdFactory>;
    getContractAt(
      name: "IIdFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIdFactory>;
    getContractAt(
      name: "Identity",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Identity>;
    getContractAt(
      name: "IClaimIssuer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClaimIssuer>;
    getContractAt(
      name: "IERC734",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC734>;
    getContractAt(
      name: "IERC735",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC735>;
    getContractAt(
      name: "IIdentity",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIdentity>;
    getContractAt(
      name: "IImplementationAuthority",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IImplementationAuthority>;
    getContractAt(
      name: "Migrations",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Migrations>;
    getContractAt(
      name: "IdentityProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IdentityProxy>;
    getContractAt(
      name: "ImplementationAuthority",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ImplementationAuthority>;
    getContractAt(
      name: "Version",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Version>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
